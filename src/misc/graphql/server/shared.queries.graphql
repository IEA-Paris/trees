type Query {
  # main search
  search(appId: ID, search: String, lang: String): SearchList
  # Get item
  getFellowship(appId: ID, itemId: ID, lang: String): Fellowship
  getAction(appId: ID, itemId: ID, lang: String): Actions
  getEvent(appId: ID, itemId: ID, lang: String): Event
  getNews(appId: ID, itemId: ID, lang: String): News
  getPeople(appId: ID, itemId: ID, lang: String): People
  getProject(appId: ID, itemId: ID, lang: String): Project
  getPublication(appId: ID, itemId: ID, lang: String): Publication
  getAffiliation(appId: ID, itemId: ID, lang: String): Affiliation

  # List items
  listEvents(appId: ID, options: ListInput!, lang: String): EventsList
  listNews(appId: ID, options: ListInput!, lang: String): NewsList
  listPeople(appId: ID, options: ListInput!, lang: String): PeopleList
  listProjects(appId: ID, options: ListInput!, lang: String): ProjectsList
  listPublications(
    appId: ID
    options: ListInput!
    lang: String
  ): PublicationsList
  listAffiliations(
    appId: ID
    options: ListInput!
    lang: String
  ): AffiliationList
  listFellowships(appId: ID, options: ListInput!, lang: String): FellowshipList

  # Misc
  getPresignedUploadUrl(appId: ID, typeFile: String!): String

  buildFiltersValues: Filters
}

schema {
  query: Query
}
